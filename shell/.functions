phpv() {
    jale use php $1
    composer global update
    source ~/.zshrc
}

alias php71="phpv 7.1"
alias php72="phpv 7.2"
alias php73="phpv 7.3"
alias php74="phpv 7.4"
alias php80="phpv 8.0"

# Create a new directory and enter it
function mkd() {
   mkdir -p "$@" && cd "$@"
}

# All the dig info
function digga() {
	dig +nocmd "$1" any +multiline +noall +answer
}

archive () {
   zip -r "$1".zip -i "$1" ;
}

function removehost() {
   ssh-keygen -R "$1"
}

function weather() {
   city="$1"

   if [ -z "$city" ]; then
      city="Bergschenhoek"
   fi

   eval "curl http://wttr.in/${city}"
}

alias mysqladm='mysql -u root'

#  Commit everything
function commit() {
  commitMessage="$1"

  if [ "$commitMessage" = "" ]; then
     commitMessage="wip"
  fi

  git add .
  eval "git commit -a -m '${commitMessage}'"
}

function db {
    if [ "$1" = "refresh" ]; then
        mysql -uroot -e "drop database $2; create database $2"
    elif [ "$1" = "create" ]; then
        mysql -uroot -e "create database $2"
    elif [ "$1" = "drop" ]; then
        mysql -uroot -e "drop database $2"
    fi
}

function opendb () {
   [ ! -f .env ] && { echo "No .env file found."; exit 1; }

   DB_CONNECTION=$(grep DB_CONNECTION .env | grep -v -e '^\s*#' | cut -d '=' -f 2-)
   DB_HOST=$(grep DB_HOST .env | grep -v -e '^\s*#' | cut -d '=' -f 2-)
   DB_PORT=$(grep DB_PORT .env | grep -v -e '^\s*#' | cut -d '=' -f 2-)
   DB_DATABASE=$(grep DB_DATABASE .env | grep -v -e '^\s*#' | cut -d '=' -f 2-)
   DB_USERNAME=$(grep DB_USERNAME .env | grep -v -e '^\s*#' | cut -d '=' -f 2-)
   DB_PASSWORD=$(grep DB_PASSWORD .env | grep -v -e '^\s*#' | cut -d '=' -f 2-)

   DB_URL="${DB_CONNECTION}://${DB_USERNAME}:${DB_PASSWORD}@${DB_HOST}:${DB_PORT}/${DB_DATABASE}"

   echo "Opening ${DB_URL}"
   open $DB_URL
}

function scheduler () {
    while :; do
        php artisan schedule:run
	echo "Sleeping 60 seconds..."
        sleep 60
    done
}

gcmt () {
    BRANCH=$(git rev-parse --abbrev-ref HEAD)
    PROJECT=$(echo ${BRANCH} | awk -F- '{print $1}')
    TICKET=$(echo ${BRANCH} | awk -F- '{print $2}')

    git commit -m "${PROJECT}-${TICKET} $1"
}

gtr () {
     if [ -n "$1" ]
     then
         git tag -d $1
         git push origin :refs/tags/$1
     else
         echo 'A tag is required.'
     fi
}

gtag () {
    if [ -n "$1" ]
    then
        git tag $1
        git push --tags
    else
        echo 'A tag is required.'
    fi
}
